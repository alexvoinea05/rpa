<Activity mc:Ignorable="sap sap2010" x:Class="GetCurrency" mva:VisualBasic.Settings="{x:Null}" sap:VirtualizedContainerService.HintSize="916,3949.6" sap2010:WorkflowViewState.IdRef="GetCurrency_1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:ug="clr-namespace:UiPathTeam.GetCryptoValues;assembly=GetCryptoValues" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="58">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPathTeam.GetCryptoValues</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Reflection</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="40">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>GetCryptoValues</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="GetCurrency" sap:VirtualizedContainerService.HintSize="926.4,3884.8" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="sd:DataTable" Name="rpaCryptoExcelData" />
      <Variable x:TypeArguments="x:String" Name="excelString" />
      <Variable x:TypeArguments="x:Double" Name="price" />
      <Variable x:TypeArguments="x:String" Name="cryptoName" />
      <Variable x:TypeArguments="x:Double" Name="amount" />
      <Variable x:TypeArguments="x:String" Name="priceNow" />
      <Variable x:TypeArguments="x:Double" Name="procent" />
      <Variable x:TypeArguments="x:Double" Name="priceNowDouble" />
      <Variable x:TypeArguments="ui:WorkbookApplication" Name="outputWork" />
      <Variable x:TypeArguments="ui:WorkbookApplication" Name="outputWorkbook" />
      <Variable x:TypeArguments="s:Exception" Name="exceptionCustom" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="884.8,3792" sap2010:WorkflowViewState.IdRef="TryCatch_1">
      <TryCatch.Try>
        <ui:ExcelApplicationScope Password="{x:Null}" sap2010:Annotation.AnnotationText="Luam valorile pentru fiecare crypto din excel." DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="848,3560.8" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_1" InstanceCachePeriod="3000" Workbook="[outputWorkbook]" WorkbookPath="rpaCrypto.xlsx">
          <ui:ExcelApplicationScope.Body>
            <ActivityAction x:TypeArguments="ui:WorkbookApplication">
              <ActivityAction.Argument>
                <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
              </ActivityAction.Argument>
              <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="814.4,3420" sap2010:WorkflowViewState.IdRef="Sequence_2">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:ExcelReadRange AddHeaders="True" DataTable="[rpaCryptoExcelData]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="772.8,60" sap2010:WorkflowViewState.IdRef="ExcelReadRange_1" SheetName="rpa">
                  <ui:ExcelReadRange.Range>
                    <InArgument x:TypeArguments="x:String">
                      <Literal x:TypeArguments="x:String" Value="" />
                    </InArgument>
                  </ui:ExcelReadRange.Range>
                </ui:ExcelReadRange>
                <ui:ForEachRow CurrentIndex="{x:Null}" DataTable="[rpaCryptoExcelData]" DisplayName="For Each Row" sap:VirtualizedContainerService.HintSize="772.8,3032" sap2010:WorkflowViewState.IdRef="ForEachRow_1">
                  <ui:ForEachRow.Body>
                    <ActivityAction x:TypeArguments="sd:DataRow">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
                      </ActivityAction.Argument>
                      <Sequence sap2010:Annotation.AnnotationText="prelucram valorile din excel si le validam pentru a le folosi mai departe in proiect" DisplayName="Body" sap:VirtualizedContainerService.HintSize="723.2,2883.2" sap2010:WorkflowViewState.IdRef="Sequence_3">
                        <Sequence.Variables>
                          <Variable x:TypeArguments="x:String" Name="priceInterm1" />
                          <Variable x:TypeArguments="x:String" Name="priceInterm2" />
                          <Variable x:TypeArguments="ui:WorkbookApplication" Name="excelRpa" />
                        </Sequence.Variables>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <If Condition="[row(1).ToString.Length&gt;0 and Convert.ToDouble(row(1).ToString)&gt;0]" sap:VirtualizedContainerService.HintSize="681.6,497.6" sap2010:WorkflowViewState.IdRef="If_1">
                          <If.Then>
                            <Assign sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_3">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:Double">[price]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:Double">[Convert.ToDouble(row(1).ToString)]</InArgument>
                              </Assign.Value>
                            </Assign>
                          </If.Then>
                          <If.Else>
                            <Sequence sap:VirtualizedContainerService.HintSize="375.2,348" sap2010:WorkflowViewState.IdRef="Sequence_5">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="333.6,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_6" Level="Error" Message="[&quot;Price is not valid&quot;]" />
                              <Assign sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="Assign_4">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[exceptionCustom.Source]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">Price is not valid</InArgument>
                                </Assign.Value>
                              </Assign>
                              <TerminateWorkflow DisplayName="Terminate Workflow" Exception="[exceptionCustom]" sap:VirtualizedContainerService.HintSize="333.6,22.4" sap2010:WorkflowViewState.IdRef="TerminateWorkflow_2" />
                            </Sequence>
                          </If.Else>
                        </If>
                        <If Condition="[row(2).ToString.Length&gt;0 and Convert.ToDouble(row(2).ToString)&gt;0]" sap:VirtualizedContainerService.HintSize="681.6,497.6" sap2010:WorkflowViewState.IdRef="If_2">
                          <If.Then>
                            <Assign sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_5">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:Double">[procent]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:Double">[Convert.ToDouble(row(2).ToString)]</InArgument>
                              </Assign.Value>
                            </Assign>
                          </If.Then>
                          <If.Else>
                            <Sequence sap:VirtualizedContainerService.HintSize="375.2,348" sap2010:WorkflowViewState.IdRef="Sequence_6">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="333.6,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_7" Level="Error" Message="[&quot;Procent is not valid&quot;]" />
                              <Assign sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="Assign_6">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[exceptionCustom.Source]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">Procent is not valid</InArgument>
                                </Assign.Value>
                              </Assign>
                              <TerminateWorkflow DisplayName="Terminate Workflow" Exception="[exceptionCustom]" sap:VirtualizedContainerService.HintSize="333.6,22.4" sap2010:WorkflowViewState.IdRef="TerminateWorkflow_3" />
                            </Sequence>
                          </If.Else>
                        </If>
                        <If Condition="[row(3).ToString.Length&gt;0 and Convert.ToDouble(row(3).ToString)&gt;0]" sap:VirtualizedContainerService.HintSize="681.6,497.6" sap2010:WorkflowViewState.IdRef="If_3">
                          <If.Then>
                            <Assign sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_7">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:Double">[amount]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:Double">[Convert.ToDouble(row(3).ToString)]</InArgument>
                              </Assign.Value>
                            </Assign>
                          </If.Then>
                          <If.Else>
                            <Sequence sap:VirtualizedContainerService.HintSize="375.2,348" sap2010:WorkflowViewState.IdRef="Sequence_7">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="333.6,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_8" Level="Trace" Message="[&quot;Amount is not valid&quot;]" />
                              <Assign sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="Assign_8">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[exceptionCustom.Source]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">Amount is not valid</InArgument>
                                </Assign.Value>
                              </Assign>
                              <TerminateWorkflow DisplayName="Terminate Workflow" Exception="[exceptionCustom]" sap:VirtualizedContainerService.HintSize="333.6,22.4" sap2010:WorkflowViewState.IdRef="TerminateWorkflow_4" />
                            </Sequence>
                          </If.Else>
                        </If>
                        <Assign sap:VirtualizedContainerService.HintSize="681.6,60" sap2010:WorkflowViewState.IdRef="Assign_9">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[cryptoName]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[row(0).ToString]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <ug:GetCryptoValues DataTableResult="{x:Null}" sap2010:Annotation.AnnotationText="aflam valoarea fiecarei monede actuale, apeland o functie predefinita" CryptoCoin="[cryptoName]" Currency="USD" DisplayName="Get crypto values" sap:VirtualizedContainerService.HintSize="681.6,150.4" sap2010:WorkflowViewState.IdRef="GetCryptoValues_2" Result="[priceNow]">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ug:GetCryptoValues>
                        <Assign sap:VirtualizedContainerService.HintSize="681.6,60" sap2010:WorkflowViewState.IdRef="Assign_2">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[priceInterm1]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[priceNow.Substring(priceNow.LastIndexOf(":")+ 1).Replace("}}", "")]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="681.6,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_4" Level="Trace" Message="[priceNow]" />
                        <Assign sap:VirtualizedContainerService.HintSize="681.6,60" sap2010:WorkflowViewState.IdRef="Assign_1">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Double">[priceNowDouble]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Double">[Convert.ToDouble(priceInterm1)]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="681.6,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Trace" Message="[cryptoName]" />
                        <ui:ExcelCloseWorkbook DisplayName="Close Workbook" sap:VirtualizedContainerService.HintSize="681.6,60" sap2010:WorkflowViewState.IdRef="ExcelCloseWorkbook_1" Workbook="[outputWorkbook]" />
                        <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="apelam procesul raspunzator de raspunsul daca este bine sau nu sa cumparam acum " DisplayName="Invoke ValidateBuyCrypto workflow" sap:VirtualizedContainerService.HintSize="333.6,157.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="ValidateBuyCrypto.xaml">
                          <ui:InvokeWorkflowFile.Arguments>
                            <InArgument x:TypeArguments="x:Double" x:Key="priceNow">[priceNowDouble]</InArgument>
                            <InArgument x:TypeArguments="x:Double" x:Key="wantedPrice">[price]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="cryptoName">[cryptoName]</InArgument>
                            <InArgument x:TypeArguments="x:Double" x:Key="amount">[amount]</InArgument>
                          </ui:InvokeWorkflowFile.Arguments>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ui:InvokeWorkflowFile>
                        <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="681.6,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Trace" Message="[priceNow]" />
                      </Sequence>
                    </ActivityAction>
                  </ui:ForEachRow.Body>
                </ui:ForEachRow>
                <ui:OutputDataTable DataTable="[rpaCryptoExcelData]" DisplayName="Output Data Table" sap:VirtualizedContainerService.HintSize="772.8,22.4" sap2010:WorkflowViewState.IdRef="OutputDataTable_1" Text="[excelString]" />
                <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="772.8,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Trace" Message="[excelString]" />
              </Sequence>
            </ActivityAction>
          </ui:ExcelApplicationScope.Body>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </ui:ExcelApplicationScope>
      </TryCatch.Try>
      <TryCatch.Catches>
        <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="851.2,22.4" sap2010:WorkflowViewState.IdRef="Catch`1_1">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ActivityAction x:TypeArguments="s:Exception">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
            </ActivityAction.Argument>
            <Sequence sap:VirtualizedContainerService.HintSize="375.2,248" sap2010:WorkflowViewState.IdRef="Sequence_4">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="333.6,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_5" Level="Error" Message="[exception.StackTrace]" />
              <TerminateWorkflow DisplayName="Terminate Workflow" Exception="[exception]" sap:VirtualizedContainerService.HintSize="333.6,22.4" sap2010:WorkflowViewState.IdRef="TerminateWorkflow_1" />
            </Sequence>
          </ActivityAction>
        </Catch>
      </TryCatch.Catches>
    </TryCatch>
  </Sequence>
</Activity>